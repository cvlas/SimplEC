close(Id1, Id2, 24) iff
	distance(Id1, Id2, 24).

close(Id1, Id2, 25) iff
	close(Id1, Id2, 24) or
	distance(Id1, Id2, 25).

close(Id1, Id2, 30) iff 
	close(Id1, Id2, 25) or
	distance(Id1, Id2, 30).

close(Id1, Id2, 34) iff
	close(Id1, Id2, 30) or
	distance(Id1, Id2, 34).

close(Id1, Id2, Threshold)=false iff
	not close(Id1, Id2, Threshold).

closeSymmetric(Id1, Id2, Threshold) iff
	close(Id1, Id2, Threshold) or
	close(Id2, Id1, Threshold).

initiate person(Id) if
	(start walking(Id)
or	start running(Id)
or	start active(Id)
or	start abrupt(Id)),
	not happens disappear(Id).

initiate person(Id)=false if
	disappear(Id).

initiate leaving_object(Person, Object) if
	appear(Object),
	inactive(Object),
	person(Person),
	closeSymmetric(Person, Object, 30).

initiate leaving_object(Person, Object)=false if
	disappear(Object).

initiate meeting(P1, P2) if
	(start greeting1(P1, P2)
or	start greeting2(P1, P2)),
	not happens disappear(P1),
	not happens disappear(P2).

greeting1(P1, P2) iff
	activeOrInactivePerson(P1),
	person(P2),
	close(P1, P2, 25),
	not(running(P2) or abrupt(P2)).

greeting2(P1, P2) iff
	walking(P1),
	activeOrInactivePerson(P2),
	close(P2, P1, 25).

activeOrInactivePerson(P) iff
	active(P) or (inactive(P), person(P)).

initiate meeting(P1, P2)=false if
	start running(P1)
or	start running(P2)
or	start abrupt(P1)
or	start abrupt(P2)
or	start close(P1, P2, 34)=false.

moving(P1, P2) iff
	walking(P1),
	walking(P2),
	close(P1, P2, 34).

fighting(P1, P2) iff
	(abrupt(P1) or abrupt(P2)),
	close(P1, P2, 24),
	not(inactive(P1) or inactive(P2)).
	
buildFromPoints: walking(_)=true, active(_)=true, inactive(_)=true, running(_)=true, abrupt(_)=true.

grounding: close(P1,P2,24)=true	-->	id_pair(P1, P2).
grounding: close(P1,P2,25)=true	-->	id_pair(P1, P2).
grounding: close(P1,P2,30)=true	-->	id_pair(P1, P2).
grounding: close(P1,P2,34)=true	-->	id_pair(P1, P2).
grounding: close(P1,P2,34)=false	-->	id_pair(P1, P2).
grounding: closeSymmetric(P1,P2,30)=true	-->	id_pair(P1, P2).
grounding: walking(P)=true	-->	list_of_ids(P). 
grounding: active(P)=true	-->	list_of_ids(P). 
grounding: inactive(P)=true	-->	list_of_ids(P). 
grounding: abrupt(P)=true	-->	list_of_ids(P). 
grounding: running(P)=true	-->	list_of_ids(P). 
grounding: person(P)=true	-->	list_of_ids(P). 
grounding: activeOrInactivePerson(P)=true	-->	list_of_ids(P). 
grounding: greeting1(P1,P2)=true	-->		id_pair(P1, P2).
grounding: greeting2(P1,P2)=true	-->		id_pair(P1, P2).
grounding: leaving_object(Person,Object)=true	-->	id_pair(Person, Object).
grounding: leaving_object(Person,Object)=true	-->	symmetric_id_pair(Person, Object). 
grounding: meeting(P1,P2)=true	-->		id_pair(P1, P2).
grounding: moving(P1,P2)=true	-->		id_pair(P1, P2).
grounding: fighting(P1,P2)=true	-->		id_pair(P1, P2).

