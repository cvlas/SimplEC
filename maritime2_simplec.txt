atemporal: nearPorts, speedArea.

terminate sailing(Vessel) if
	(velocity(Vessel, Speed, Heading),
	Speed < 20)
or	gap_start(Vessel).

terminate highSpeedIn(Vessel, AreaName) if
	(isInArea(Vessel, AreaName),
	happens velocity(Vessel, Speed, Heading),
	speedArea(AreaName,SpeedArea),
	Speed < SpeedArea)
or	leavesArea(Vessel, AreaName)
or	gap_start(Vessel).

activeOrInactivePerson(P) iff
	active(P) or (inactive(P), person(P)).

close(Id1, Id2, Threshold)=false iff
	not close(Id1, Id2, Threshold).
	
initiate passenger_density(ID,VT)=Val iff
passenger_density_change(ID,VT,Val).

initiate moving(P1,P2) if
start walking(P1),
walking(P2),
close(P1,P2).

initiate moving(P1,P2) if
start walking(P2),
walking(P1),
close(P1,P2).

initiate moving(P1,P2) if
start close(P1,P2),
walking(P1),
walking(P2).

terminate moving(P1,P2) iff
end walking(P1) or
end walking(P2) or
end close(P1,P2).

initiate person(P) iff
(start walking(P) or
start active(P) or
start running(P) or
start abrupt(P)),
not disappear(P).

terminate person(P) iff
disappear(P).

moving(P1,P2) iff
walking(P1),
walking(P2),
close(P1,P2).

greeting1(P1, P2)=true iff
    activeOrInactivePerson(P1)=true,
    person(P2)=true,
    close(P1, P2, 25)=true,
    not (running(P2)=true or abrupt(P2)=true).

fighting(P1,P2) iff
(abrupt(P1) or abrupt(P2)),
close(P1,P2),
not (inactive(P1) or inactive(P2)).

happens fastApproach(Vessel) iff
speedChange(Vessel),
velocity(Vessel) > 20 knots,
coord(Vessel) =(Lon, Lat),
not nearPorts(Lon, Lat),
headingToVessels(Vessel).
